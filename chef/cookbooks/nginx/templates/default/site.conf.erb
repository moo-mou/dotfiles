map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

map $sent_http_content_type $expires {
    default         off;
    application/pdf 42d;
    ~image/         max;
}

<% @upstreams.each do |upstream| %>
upstream <%= upstream[:name] %> {
    keepalive 1;
    server <%= upstream[:address] %>;
}
<% end %>

# http wellknown route for letsencrypt
server {
    listen 80;
    listen [::]:80;
    server_name <%= "#{@root_url}" %>;

    location ^~ /.well-known/ {
        root /var/www/html;
        # Add index.php to the list if you are using PHP
        index index.html index.htm index.nginx-debian.html;
        allow all;
    }

    location / {
        # route everything else to https
        return 301 https://$server_name$request_uri;
    }
}

<% @subdomains.each do |subdomain| %>
# <%= subdomain %>
server {
    listen 80;
    listen [::]:80;
    server_name <%= "#{subdomain}.#{@root_url}" %>;

    location ^~ /.well-known/ {
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        allow all;
    }

    location / {
        # route everything else to https
        return 301 https://$server_name$request_uri;
    }
}
# redirect naked subdomain to <subdomain>.<root_url>
# this is really only useful for search domain configuration on hosts
server {
    listen 80;
    listen [::]:80;
    server_name <%= subdomain %>;
    return 301 https://<%= "#{subdomain}.#{@root_url}" %>$request_uri;
}
<% end %>

<% @servers.each do |server| %>
# <%= server[:name] %>
server {
    # SSL configuration
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    include snippets/ssl-<%= @root_url %>.conf;
    include snippets/ssl-params.conf;

    server_name <%= "#{server[:name]}.#{@root_url}" %>;
    add_header Strict-Transport-Security "max-age=15768000; includeSubDomains: always;";

    access_log /var/log/nginx/<%= @root_url %>/<%= server[:name]%>/access.log combined buffer=32k flush=30s;
    error_log /var/log/nginx/<%= @root_url %>/<%= server[:name]%>/error.log;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;

    <% if server[:root] %>
    root <%= server[:root] %>;
    <% end %>

    <% (server[:locations] or []).each do |location| %>
    location <%= location[:path] %> {
        <% if location[:root] %>
        root <%= location[:root] %>;
        <% end %>

        <% if location[:upstream] %>
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://<%= location[:upstream] %>;
        <% else %>
        try_files $uri $uri/ $uri.html /index.html =404;
        sendfile on;
        expires $expires;
        <% end %>
    }
    <% end %>

    location / {
        <% if server[:upstream] %>
        proxy_http_version 1.1;
        proxy_set_header Connection "";
        proxy_pass http://<%= server[:upstream] %>;
        <% else %>
        try_files $uri $uri/ $uri.html /index.html =404;
        sendfile on;
        <% end %>
    }

}
<% end %>

# Redirect naked root_url to www by default
server {
    listen 80;
    listen [::]:80;
    server_name <%= @root_url %>;
    return 301 https://www.<%= @root_url %>$request_uri;
}
