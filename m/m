#!/usr/bin/env python
import argparse
import os
import shutil
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument('cmd')
parser.add_argument('tag')

args = parser.parse_args()

if args.cmd == 'build':
    tag = args.tag
    shutil.copy2('/Users/moomou/.ssh/gitlab_rsa', './gitlab_rsa')
    p = subprocess.Popen('docker build . -t %s' % tag, shell=True)
    p.communicate()

    subprocess.check_output('docker save %s | gzip -c > ~/dev/chub/%s.gz' % (tag, tag), shell=True)
    os.remove('./gitlab_rsa')

    p = subprocess.Popen("cd /Users/moomou/dev/chub && git add . && git ci -am 'updated %s' && git push origin master" % tag, shell=True)
    p.communicate()

elif args.cmd == 'deploy':
    app = args.tag

    # first run deploy_assets
    if app == 'slothapp':
        p = subprocess.Popen('cd /Users/moomou/dev/dotfiles/m/ops/%s && ./deploy_asset.sh' % app, shell=True)
        p.communicate()

    p = subprocess.Popen('cd /Users/moomou/dev/dotfiles/m/ops && ./deploy.sh %s' % app, shell=True)
    p.communicate()

elif args.cmd == 'ginit':
    gitignore = args.tag
    gitignore[0] = gitignore[0].upper()

    p = subprocess.Popen('g_init %s' % gitignore, shell=True)
    p.communicate()
