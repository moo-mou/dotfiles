#!/usr/bin/env python
import argparse
import os
import shutil
import subprocess

parser = argparse.ArgumentParser()
parser.add_argument('cmd')
parser.add_argument('--tag', help='for building docker img')
parser.add_argument('--role', help='for reheating')

args = parser.parse_args()

HOME = os.path.expanduser('~')
ROOT = os.path.expanduser('~/dev')
SSH_DIR = os.path.expanduser('~/.ssh')

def path(folder):
    return os.path.join(ROOT, folder)

if args.cmd == 'build':
    tag = args.tag
    shutil.copy2(os.path.join(SSH_DIR, 'gitlab_rsa'), './gitlab_rsa')
    p = subprocess.Popen('docker build . -t %s' % tag, shell=True)
    p.communicate()

    subprocess.check_output('docker save %s | gzip -c > ~/dev/chub/%s.gz' % (tag, tag), shell=True)
    os.remove('./gitlab_rsa')

    cmd = 'cd %s && git add . && git ci -am updated %s && git push origin master' % (path('chub'), tag)
    p = subprocess.Popen(cmd, shell=True)
    p.communicate()

elif args.cmd == 'deploy':
    app = args.tag

    # first run deploy_assets
    if app == 'slothapp':
        cmd = 'cd %s && ./deploy_asset.sh' % path('dotfiles/m/ops/%s' % app)
        p = subprocess.Popen(cmd, shell=True)
        p.communicate()

    p = subprocess.Popen('cd %s && ./deploy.sh %s' % (path('dotfiles/m/ops'), app), shell=True)
    p.communicate()

elif args.cmd == 'ginit':
    gitignore = args.tag
    gitignore[0] = gitignore[0].upper()

    p = subprocess.Popen('ginit %s' % gitignore, shell=True)
    p.communicate()

elif args.cmd == 'reheat':
    role = args.role

    # cp chef folder to ~/.chef
    chef_run_dir = os.path.expanduser('~/.chef')

    if not os.path.exists(chef_run_dir):
        os.mkdir(chef_run_dir)

    # copy over chef
    print(path('dotfiles/chef'), chef_run_dir)

    p = subprocess.Popen('cp -r %s/* %s' % (path('dotfiles/chef'), chef_run_dir), shell=True)
    p.communicate()

    # run bash install.sh' "$role"
    p = subprocess.Popen('cd %s && sudo bash install.sh %s' % (chef_run_dir, role), shell=True)
    p.communicate()
