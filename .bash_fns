random-255() {
    RANDOM=$$$(date +%s)
    echo $((RANDOM % 255))
}

hex2rgb() {
    echo $(python -c 'import json; h = "'$1'"; print(json.dumps(tuple(int(h[i:i+2], 16) for i in (0, 2, 4))))')
}

# https://gist.github.com/wadey/1140259
tab-color() {
    colors=('e6194b' '3cb44b' 'ffe119' '4363d8' 'f58231' '911eb4' '46f0f0' 'f032e6' 'bcf60c' 'fabebe' '008080' 'e6beff' '9a6324' 'fffac8' '800000' 'aaffc3' '808000' 'ffd8b1' '000075' '808080' 'ffffff' '000000')
    color=${colors[$RANDOM % ${#colors[@]} ]}
    color=$(hex2rgb $color)
    R=${1:-$(echo $color | jq .[0])}
    G=${2:-$(echo $color | jq .[1])}
    B=${3:-$(echo $color | jq .[2])}
    echo -ne "\033]6;1;bg;red;brightness;$R\a"
    echo -ne "\033]6;1;bg;green;brightness;$G\a"
    echo -ne "\033]6;1;bg;blue;brightness;$B\a"
}
tab-reset() {
    echo -ne "\033]6;1;bg;*;default\a"
}
# Change the color of the tab when using SSH
# reset the color after the connection closes
color-ssh() {
    if [[ -n "$ITERM_SESSION_ID" ]]; then
        trap "tab-reset" RETURN
        if [[ "$*" =~ "production|ec2-.*compute-1" ]]; then
            tab-color 255 0 0
        else
            tab-color 255 145 117
        fi
    fi
    ssh $*
}
alias ssh=color-ssh

ginit() {
    git init
    lan=$(echo $1 | python -c "print raw_input().capitalize()")
    wget -q https://raw.githubusercontent.com/github/gitignore/master/${lan}.gitignore -O .gitignore
    git add .
    git ci -am 'init with .gitignore'
}

# Custom Prompt
function Color() {
    echo "$(tput setaf $1)"
}
function ResetColor() {
    echo "$(tput sgr0)"
}
function BashPrompt() {
    local reset=$(ResetColor)
    local last_command=$(echo $last_command_exit_code | awk -F "#" '{print $1}')
    local last_status=$(echo $last_command_exit_code | awk -F "#" '{print $2}')

    local failure='(ಠ_ಠ) '
    local success='ヽ(・∀・)ﾉ '

    last_status="$(Color 1)$success$reset[$PROMPT_PREFIX]."
    echo -n -e $last_status
}

# pyenv dark magic
function initpyenv() {
    command -v pyenv || return
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
}
initpyenv

# ranger color
function color-ranger() {
    if [[ -n "$ITERM_SESSION_ID" ]]; then
        trap "tab-reset" RETURN
        tab-color 213 95 192
    fi
    ranger $*
}
alias ranger=color-ranger


# git rebase
function rebase() {
    branch=${1:-master}
    git pull --rebase origin $branch && git sub update --init --jobs 4
}
